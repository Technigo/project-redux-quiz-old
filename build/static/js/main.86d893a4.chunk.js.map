{"version":3,"sources":["reducers/assets/the_turtles.jpg","reducers/assets/giphy.gif","reducers/assets/mrozo.gif","reducers/assets/spicegirls.gif","reducers/assets/guns.gif","reducers/assets/soundgarden.gif","reducers/assets/eminem.gif","reducers/assets/hanson.gif","reducers/assets/nodoubt.gif","reducers/assets/busta.gif","reducers/assets/nirvana.gif","reducers/quiz.js","components/Answers.js","reducers/timer.js","components/Summary.js","components/Counter.js","components/AnswerButtons.js","components/Questions.js","components/NextQuestion.js","components/Timer.js","components/CurrentQuestion.js","components/StartPage.js","App.js","index.js"],"names":["module","exports","initialState","questions","id","questionText","questionText1","img","require","options","correctAnswerIndex","answers","currentQuestionIndex","quizOver","quiz","createSlice","name","reducers","submitAnswer","state","action","payload","questionId","answerIndex","question","find","q","Error","undefined","push","answer","isCorrect","goToNextQuestion","length","restart","AnswerWrap","styled","div","AnswerHeadline","HeadlineOne","h2","HeadlineTwo","AnswerSection","YourAnswer","p","QuizAnswer","Answers","useSelector","store","map","item","key","timerSlice","value","countUp","reset","MainSummaryContainer","SummaryContainer","SummaryScore","criticAnimation","keyframes","SummaryText","RestartButton","button","Summary","rightAnswers","filter","timerValue","timer","dispatch","useDispatch","console","log","to","onClick","actions","CounterWrapper","Counter","counter","style","width","QuestionButtonWrapper","QuestionButton","AnswerButtons","a","index","onSubmitAnswer","disabled","borderColor","color","QuestionWrapper","TextWrapper","QuestionText","h1","ImageContainer","ImageStyled","TextQuestion","Questions","src","alt","NextButton","NextQuestion","TimerStyle","Timer","useEffect","setInterval","clearInterval","role","aria-label","QuestionContainer","CurrentQuestion","StartContainer","StyleImage","Header","LinkStyled","Link","StartPage","the_turtles","reducer","combineReducers","configureStore","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"0HAAAA,EAAOC,QAAU,IAA0B,yC,4ECA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,qKCwGrCC,EAAe,CACnBC,UAvGgB,CAChB,CACEC,GAAI,EACJC,aACE,8MACFC,cAAe,sDACfC,IAAKC,EAAQ,IACbC,QAAS,CAAC,UAAW,UAAW,OAAQ,SACxCC,mBAAoB,GAGtB,CACEN,GAAI,EACJC,aAAc,4CACdC,cAAe,qBACfC,IAAKC,EAAQ,IACbC,QAAS,CAAC,aAAc,mBAAoB,WAAY,QACxDC,mBAAoB,GAEtB,CACEN,GAAI,EACJC,aAAc,qDACdC,cAAe,gDACfC,IAAKC,EAAQ,IACbC,QAAS,CAAC,OAAQ,OAAQ,OAAQ,QAClCC,mBAAoB,GAEtB,CACEN,GAAI,EACJC,aACE,yHACFC,cAAe,4BACfC,IAAKC,EAAQ,IACbC,QAAS,CAAC,YAAa,QAAS,eAAgB,iBAChDC,mBAAoB,GAEtB,CACEN,GAAI,EACJC,aACE,oNACFC,cAAe,kCACfC,IAAKC,EAAQ,IACbC,QAAS,CAAC,eAAgB,iBAAkB,eAAgB,cAC5DC,mBAAoB,GAGtB,CACEN,GAAI,EACJC,aACE,4FACFC,cAAe,mCACfC,IAAKC,EAAQ,IACbC,QAAS,CAAC,sBAAuB,OAAQ,iBAAkB,eAC3DC,mBAAoB,GAEtB,CACEN,GAAI,EACJC,aACE,2LACFC,cAAe,qDACfC,IAAKC,EAAQ,IACbC,QAAS,CAAC,cAAe,cAAe,cAAe,iBACvDC,mBAAoB,GAEtB,CACEN,GAAI,EACJC,aACE,gIACFC,cAAe,qCACfC,IAAKC,EAAQ,IACbC,QAAS,CAAC,gBAAiB,iBAAkB,eAAgB,QAC7DC,mBAAoB,GAEtB,CACEN,GAAI,EACJC,aAAc,2DACdC,cAAe,+BACfC,IAAKC,EAAQ,IACbC,QAAS,CACP,qBACA,MACA,+BACA,mBAEFC,mBAAoB,GAEtB,CACEN,GAAI,GACJC,aACE,6FACFC,cAAe,qCACfC,IAAKC,EAAQ,IACbC,QAAS,CACP,sBACA,qBACA,qBACA,2BAEFC,mBAAoB,IAMtBC,QAAS,GACTC,qBAAsB,EACtBC,UAAU,GAGCC,EAAOC,YAAY,CAC9BC,KAAM,OACNd,eACAe,SAAU,CACRC,aAAc,SAACC,EAAOC,GACpB,MAAoCA,EAAOC,QAAnCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YACdC,EAAWL,EAAMhB,UAAUsB,MAAK,SAACC,GAAD,OAAOA,EAAEtB,KAAOkB,KAEtD,IAAKE,EACH,MAAM,IAAIG,MACR,0FAIJ,QAAsCC,IAAlCJ,EAASf,QAAQc,GACnB,MAAM,IAAII,MAAJ,iCACsBJ,EADtB,mDAKRJ,EAAMR,QAAQkB,KAAK,CACjBP,aACAC,cACAC,WACAM,OAAQN,EAASf,QAAQc,GACzBQ,UAAWP,EAASd,qBAAuBa,KAI/CS,iBAAkB,SAACb,GACbA,EAAMP,qBAAuB,IAAMO,EAAMhB,UAAU8B,OACrDd,EAAMN,UAAW,EAEjBM,EAAMP,sBAAwB,GAIlCsB,QAAS,WACP,OAAOhC,M,qBCjJPiC,EAAaC,IAAOC,IAAV,yEAIVC,EAAiBF,IAAOC,IAAV,wGAMdE,EAAcH,IAAOI,GAAV,gDAIXC,EAAcL,IAAOI,GAAV,gDAIXE,EAAgBN,IAAOC,IAAV,wGAMbM,EAAaP,IAAOQ,EAAV,gJAQVC,EAAaT,IAAOQ,EAAV,+IASHE,EAAU,WACrB,IAAMhB,EAASiB,aAAY,SAACC,GAAD,OAAWA,EAAMlC,KAAKH,WACjD,OACE,kBAACwB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,oBACA,kBAACE,EAAD,wBAEDX,EAAOmB,KAAI,SAACC,GACX,OACE,kBAACR,EAAD,CAAeS,IAAKD,EAAK5B,YACvB,kBAACqB,EAAD,KAAaO,EAAKpB,QAClB,kBAACe,EAAD,KACGK,EAAK1B,SAASf,QAAQyC,EAAK1B,SAASd,2BCpDtC0C,EAAarC,YAAY,CACpCC,KAAM,QACNd,aANmB,CACnBmD,MAAO,GAMPpC,SAAU,CACRqC,QADQ,SACAnC,GACNA,EAAMkC,SAERE,MAJQ,SAIFpC,GACJA,EAAMkC,MAAQ,MCLdG,GAAuBpB,IAAOC,IAAV,0EAKpBoB,GAAmBrB,IAAOC,IAAV,0TAgBhBqB,GAAetB,IAAOI,GAAV,oHAOZmB,GAAkBC,YAAH,kJAMfC,GAAczB,IAAOC,IAAV,mKAGFsB,IAOTG,GAAgB1B,IAAO2B,OAAV,oSAiEJC,GAhDC,WACd,IAAMxC,EAAWuB,aAAY,SAAC5B,GAAD,OAAWA,EAAML,KAAKX,aAE7C8D,EADSlB,aAAY,SAACC,GAAD,OAAWA,EAAMlC,KAAKH,WACrBuD,QAAO,SAAChB,GAAD,OAA6B,IAAnBA,EAAKnB,aAC5C7B,EAAe6C,aAAY,SAAC5B,GAAD,OAAWA,EAAML,KAAKZ,gBACjDiE,EAAapB,aAAY,SAACC,GAAD,OAAWA,EAAMoB,MAAMf,SAChDgB,EAAWC,cAkBjB,OAFAC,QAAQC,IAAIhD,GAGV,kBAACgC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,gBACWO,EAAahC,OADxB,WACwCT,EAASS,OADjD,cACoE,IACjEkC,EAFH,OAKA,kBAACN,GAAD,KACII,EAAahC,QAAU,GAAK,4DAC3BgC,EAAahC,QAAU,GAAK,iDAC5BgC,EAAahC,QAAU,GAAK,yCAC5BgC,EAAahC,QAAU,GAAK,iDAEjC,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAMwC,GAAG,KACP,kBAACX,GAAD,CAAeY,QAAS,kBAhC9BL,EACEvD,EAAK6D,QAAQzC,QAAQ,CACnBhC,uBAIJmE,EACEjB,EAAWuB,QAAQpB,MAAM,CACvBrD,oBAwBE,eC3GJ0E,GAAiBxC,IAAOC,IAAV,qbAkCLwC,GAXC,WACd,IAAMC,EAAU/B,aAAY,SAACC,GAAD,OAAWA,EAAMlC,KAAKF,wBAC5CY,EAAWuB,aAAY,SAAC5B,GAAD,OAAWA,EAAML,KAAKX,UAAU8B,UAE7D,OACE,kBAAC2C,GAAD,CAAgBG,MAAO,CAAEC,MAAM,GAAD,OAA4B,IAAtBxD,EAAWsD,GAAjB,OAC3BA,EAAU,EADb,KACkBtD,IC3BhByD,GAAwB7C,IAAOC,IAAV,mPAerB6C,GAAiB9C,IAAO2B,OAAV,oaA2ELoB,GAnDO,WACpB,IAAM3D,EAAWuB,aACf,SAAC5B,GAAD,OAAWA,EAAML,KAAKX,UAAUgB,EAAML,KAAKF,yBAGvCD,EAAUoC,aAAY,SAAC5B,GAAD,OAC1BA,EAAML,KAAKH,QAAQc,MAAK,SAAC2D,GAAD,OAAOA,EAAE9D,aAAeE,EAASpB,SAGrDiE,EAAWC,cAWjB,OACE,6BACE,kBAACW,GAAD,KACGzD,EAASf,QAAQwC,KAAI,SAACC,EAAMmC,GAAP,OACpB,yBAAKlC,IAAKD,GACR,kBAACgC,GAAD,CACER,QAAS,kBAfE,SAACtE,EAAIiF,GAC1BhB,EACEvD,EAAK6D,QAAQzD,aAAa,CACxBI,WAAYlB,EACZmB,YAAa8D,KAWQC,CAAe9D,EAASpB,GAAIiF,IAC3CE,SAAU5E,EACVoE,MAAO,CACLS,YAAc7E,EAEVa,EAASd,qBAAuB2E,EAChC,aACA,UAHA,QAKJI,MAAQ9E,EAEJa,EAASd,qBAAuB2E,EAChC,aACA,UAHA,UAMLnC,UCnFTwC,GAAkBtD,IAAOC,IAAV,4IAQfsD,GAAcvD,IAAOC,IAAV,6HAMXuD,GAAexD,IAAOyD,GAAV,mIASZC,GAAiB1D,IAAOC,IAAV,sGAQd0D,GAAc3D,IAAO7B,IAAV,wJAUXyF,GAAe5D,IAAOI,GAAV,iOAoCHyD,GAxBG,WAChB,IAAMzE,EAAWuB,aACf,SAAC5B,GAAD,OAAWA,EAAML,KAAKX,UAAUgB,EAAML,KAAKF,yBAG7C,OAAKY,EAKH,6BACE,kBAACkE,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KAAepE,EAASnB,cACxB,kBAAC2F,GAAD,SAAgBxE,EAASlB,iBAG7B,kBAACwF,GAAD,KACE,kBAACC,GAAD,CAAaG,IAAK1E,EAASjB,IAAK4F,IAAI,YAZjC,8ECzDLC,GAAahE,IAAO2B,OAAV,qPAuCDsC,GA1BM,WACnB,IAAMhC,EAAWC,cAEX9C,EAAWuB,aACf,SAAC5B,GAAD,OAAWA,EAAML,KAAKX,UAAUgB,EAAML,KAAKF,yBAGvCD,EAAUoC,aAAY,SAAC5B,GAAD,OAC1BA,EAAML,KAAKH,QAAQc,MAAK,SAAC2D,GAAD,OAAOA,EAAE9D,aAAeE,EAASpB,SAW3D,OACE,kBAACgG,GAAD,CAAYb,UAAW5E,EAAS+D,QAAS,WATtB,IAACtE,EACpBiE,EACEvD,EAAK6D,QAAQ3C,iBAAiB,CAC5BV,WAAYlB,OAMhB,kBClCEkG,GAAalE,IAAOQ,EAAV,sIASH2D,GAAQ,WACnB,IAAMpC,EAAapB,aAAY,SAACC,GAAD,OAAWA,EAAMoB,MAAMf,SAChDgB,EAAWC,cAWjB,OATAkC,qBAAU,WACR,IAAMpC,EAAQqC,aAAY,WACxBpC,EAASjB,EAAWuB,QAAQrB,aAC3B,KACH,OAAO,WACLoD,cAActC,MAEf,CAACC,IAGF,kBAACiC,GAAD,KACE,0BAAMK,KAAK,MAAMC,aAAW,SAA5B,UAGCzC,EAJH,aCjBE0C,GAAoBzE,IAAOC,IAAV,yMAYjBqD,GAAkBtD,IAAOC,IAAV,iMASRyE,GAAkB,WAC7B,IAAMjG,EAAWkC,aAAY,SAAC5B,GAAD,OAAWA,EAAML,KAAKD,YAEnD,OACE,6BACGA,EACC,kBAAC,GAAD,MAEA,kBAACgG,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,U,oBCzCNE,GAAiB3E,IAAOC,IAAV,6XAqBd2E,GAAa5E,IAAO7B,IAAV,4CAIV0G,GAAS7E,IAAOyD,GAAV,kEAGNqB,GAAa9E,YAAO+E,IAAP/E,CAAH,4XAoBHgF,GAAY,WACvB,OACE,kBAACL,GAAD,KACE,kBAACE,GAAD,2BACA,kBAACD,GAAD,CAAYd,IAAKmB,OACjB,kBAACH,GAAD,CAAYzC,GAAG,SAAf,U,QCjDA6C,GAAUC,YAAgB,CAC9BzG,KAAMA,EAAKwG,QACXlD,MAAOhB,EAAWkE,UAGdtE,GAAQwE,YAAe,CAAEF,aAElBG,GAAM,WACjB,OACE,kBAAC,IAAD,CAAUzE,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO0E,KAAK,IAAIC,QAAS,kBAAC,GAAD,QACzB,kBAAC,KAAD,CAAOD,KAAK,QAAQC,QAAS,kBAAC,GAAD,YCjBvCC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.86d893a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/the_turtles.fc5cb72f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/giphy.6d9eec03.gif\";","module.exports = __webpack_public_path__ + \"static/media/mrozo.64a830ef.gif\";","module.exports = __webpack_public_path__ + \"static/media/spicegirls.06fc57bd.gif\";","module.exports = __webpack_public_path__ + \"static/media/guns.f3d3e552.gif\";","module.exports = __webpack_public_path__ + \"static/media/soundgarden.10f4a5be.gif\";","module.exports = __webpack_public_path__ + \"static/media/eminem.ec8094a2.gif\";","module.exports = __webpack_public_path__ + \"static/media/hanson.a26d317b.gif\";","module.exports = __webpack_public_path__ + \"static/media/nodoubt.2fc4bde9.gif\";","module.exports = __webpack_public_path__ + \"static/media/busta.36c49d23.gif\";","module.exports = __webpack_public_path__ + \"static/media/nirvana.01d6fc2e.gif\";","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst questions = [\r\n  {\r\n    id: 1,\r\n    questionText:\r\n      \"Intergalactic is a song by American band Beastie Boys. Intergalactic was released as the first single from their fifth studio album, Hello Nasty. The single reached number 28 on the US Billboard Hot 100.\",\r\n    questionText1: \"We like to kow witch GENRE Beastie Boys belongs to?\",\r\n    img: require(\"./assets/giphy.gif\"),\r\n    options: [\"Hip Hop\", \"Classic\", \"Rock\", \"K-pop\"],\r\n    correctAnswerIndex: 0,\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    questionText: \"This flat beat is something to remember! \",\r\n    questionText1: \"Who is the artist?\",\r\n    img: require(\"./assets/mrozo.gif\"),\r\n    options: [\"Todd Terje\", \"Paul Kalkbrenner\", \"Mr. Oizo\", \"Moby\"],\r\n    correctAnswerIndex: 2,\r\n  },\r\n  {\r\n    id: 3,\r\n    questionText: \"Somethimes all you need is to spice up your life! \",\r\n    questionText1: \"Which year did the Spice Girls journey start?\",\r\n    img: require(\"./assets/spicegirls.gif\"),\r\n    options: [\"1901\", \"1999\", \"2001\", \"1994\"],\r\n    correctAnswerIndex: 3,\r\n  },\r\n  {\r\n    id: 4,\r\n    questionText:\r\n      \"Welcome to the Jungle is a song by American rock band Guns'N Roses? It reached number seven on the Billboard Hot 100. \",\r\n    questionText1: \"But who wrote the lyrics \",\r\n    img: require(\"./assets/guns.gif\"),\r\n    options: [\"Axl Rose \", \"Slash\", \"Duff McKagan\", \"Izzy Stradlin\"],\r\n    correctAnswerIndex: 0,\r\n  },\r\n  {\r\n    id: 5,\r\n    questionText:\r\n      \"Soundgarden was an American rock band formed in Washington 1984. They achieved its biggest success with the 1994 album Superunknown, They yielded the Grammy Award-winning singles for this song and music video.\",\r\n    questionText1: \"What was the name of the song? \",\r\n    img: require(\"./assets/soundgarden.gif\"),\r\n    options: [\"Black or sun\", \"Black hole sun\", \"Slack or fun\", \"Sun or fun\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    questionText:\r\n      \"Eminem  was the first rapper in history to win an Oscar for Best Original song in 8 mile.\",\r\n    questionText1: \"What song was it, won the price?\",\r\n    img: require(\"./assets/eminem.gif\"),\r\n    options: [\"The Real Slim Shady\", \"Stan\", \"Lose Your Self\", \"May name is\"],\r\n    correctAnswerIndex: 2,\r\n  },\r\n  {\r\n    id: 7,\r\n    questionText:\r\n      \"Hanson boys was a boy band In the early to mid-1990. There song Mmmbop was nominated for two Grammys at the 40th Annual Grammy Awards and is the band's most successful single to date. \",\r\n    questionText1: \"But do you know the rest of the chorus, of Mmmbop?\",\r\n    img: require(\"./assets/hanson.gif\"),\r\n    options: [\"ba dop duba\", \"ba duba dop\", \"duba dop ba\", \"duba duba pop\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n  {\r\n    id: 8,\r\n    questionText:\r\n      \"No Doubt is an American rock band from Anaheim, California, formed in 1986. They have sold over 33 million records worldwide.\",\r\n    questionText1: \"Do you know the lead singers name?\",\r\n    img: require(\"./assets/nodoubt.gif\"),\r\n    options: [\"Allison Wolfe\", \"Courtney Love \", \"Gwen Stefani\", \"Cher\"],\r\n    correctAnswerIndex: 2,\r\n  },\r\n  {\r\n    id: 9,\r\n    questionText: \"This trippy video really brings back some good memories.\",\r\n    questionText1: \"What's the name of the song?\",\r\n    img: require(\"./assets/busta.gif\"),\r\n    options: [\r\n      \"Fla$ing Your Money\",\r\n      \"PMW\",\r\n      \"Brain Splash At The Aquarium\",\r\n      \"Gimme Some More\",\r\n    ],\r\n    correctAnswerIndex: 3,\r\n  },\r\n  {\r\n    id: 10,\r\n    questionText:\r\n      \"Frontman Kurt Cobain from Nirvana and Hole frontwoman Courtney Love (Hole) had one child. \",\r\n    questionText1: \"Do you know there child´s name?\",\r\n    img: require(\"./assets/nirvana.gif\"),\r\n    options: [\r\n      \"Frances Bean Cobain\",\r\n      \"Franca Bean Cobain\",\r\n      \"France Cobain Bean\",\r\n      \"France Cobain Blackbean\",\r\n    ],\r\n    correctAnswerIndex: 0,\r\n  },\r\n];\r\n\r\nconst initialState = {\r\n  questions,\r\n  answers: [],\r\n  currentQuestionIndex: 0,\r\n  quizOver: false,\r\n};\r\n\r\nexport const quiz = createSlice({\r\n  name: \"quiz\",\r\n  initialState,\r\n  reducers: {\r\n    submitAnswer: (state, action) => {\r\n      const { questionId, answerIndex } = action.payload;\r\n      const question = state.questions.find((q) => q.id === questionId);\r\n\r\n      if (!question) {\r\n        throw new Error(\r\n          \"Could not find question! Check to make sure you are passing the question id correctly.\"\r\n        );\r\n      }\r\n\r\n      if (question.options[answerIndex] === undefined) {\r\n        throw new Error(\r\n          `You passed answerIndex ${answerIndex}, but it is not in the possible answers array!`\r\n        );\r\n      }\r\n\r\n      state.answers.push({\r\n        questionId,\r\n        answerIndex,\r\n        question,\r\n        answer: question.options[answerIndex],\r\n        isCorrect: question.correctAnswerIndex === answerIndex,\r\n      });\r\n    },\r\n\r\n    goToNextQuestion: (state) => {\r\n      if (state.currentQuestionIndex + 1 === state.questions.length) {\r\n        state.quizOver = true;\r\n      } else {\r\n        state.currentQuestionIndex += 1;\r\n      }\r\n    },\r\n\r\n    restart: () => {\r\n      return initialState;\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AnswerWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst AnswerHeadline = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst HeadlineOne = styled.h2`\r\n  font-size: 18px;\r\n`;\r\n\r\nconst HeadlineTwo = styled.h2`\r\n  font-size: 18px;\r\n`;\r\n\r\nconst AnswerSection = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n`;\r\n\r\nconst YourAnswer = styled.p`\r\n  color: white;\r\n  margin-top: 0;\r\n  font-size: 15px;\r\n  @media (min-width: 768px) {\r\n    margin-right: 50px;\r\n  }\r\n`;\r\nconst QuizAnswer = styled.p`\r\n  color: white;\r\n  margin-top: 0;\r\n  font-size: 15px;\r\n  @media (min-width: 768px) {\r\n    margin-left: 50px;\r\n  }\r\n`;\r\n\r\nexport const Answers = () => {\r\n  const answer = useSelector((store) => store.quiz.answers);\r\n  return (\r\n    <AnswerWrap>\r\n      <AnswerHeadline>\r\n        <HeadlineOne>Your answer</HeadlineOne>\r\n        <HeadlineTwo>Correct answer</HeadlineTwo>\r\n      </AnswerHeadline>\r\n      {answer.map((item) => {\r\n        return (\r\n          <AnswerSection key={item.questionId}>\r\n            <YourAnswer>{item.answer}</YourAnswer>\r\n            <QuizAnswer>\r\n              {item.question.options[item.question.correctAnswerIndex]}\r\n            </QuizAnswer>\r\n          </AnswerSection>\r\n        );\r\n      })}\r\n    </AnswerWrap>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  value: 0,\r\n};\r\n\r\nexport const timerSlice = createSlice({\r\n  name: \"timer\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    countUp(state) {\r\n      state.value++;\r\n    },\r\n    reset(state) {\r\n      state.value = 0;\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { quiz } from \"../reducers/quiz\";\r\nimport { Answers } from \"./Answers\";\r\nimport { timerSlice } from \"../reducers/timer\";\r\n\r\nconst MainSummaryContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SummaryContainer = styled.div`\r\n  width: 300px;\r\n  display: flex;\r\n  align-self: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 120px auto;\r\n    width: 500px;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst SummaryScore = styled.h2`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 16px;\r\n  font-style: italic;\r\n`;\r\n\r\nconst criticAnimation = keyframes`\r\n0% { font-size: 16px; color: white; }\r\n50% { font-size: 17px; color: yellow;}\r\n100% { font-size: 16px;  color: red;}\r\n`;\r\n\r\nconst SummaryText = styled.div`\r\n  text-align: center;\r\n  font-size: 16px;\r\n  animation: ${criticAnimation} 0.7s infinite;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst RestartButton = styled.button`\r\n  border-radius: 20px;\r\n  width: 70px;\r\n  height: 40px;\r\n  padding: 10x;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  background-color: black;\r\n  margin-bottom: 15px;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst Summary = () => {\r\n  const question = useSelector((state) => state.quiz.questions);\r\n  const answer = useSelector((store) => store.quiz.answers);\r\n  const rightAnswers = answer.filter((item) => item.isCorrect === true);\r\n  const initialState = useSelector((state) => state.quiz.initialState);\r\n  const timerValue = useSelector((store) => store.timer.value);\r\n  const dispatch = useDispatch();\r\n\r\n  const onRestart = () => {\r\n    dispatch(\r\n      quiz.actions.restart({\r\n        initialState,\r\n      })\r\n    );\r\n\r\n    dispatch(\r\n      timerSlice.actions.reset({\r\n        initialState,\r\n      })\r\n    );\r\n  };\r\n\r\n  console.log(question);\r\n\r\n  return (\r\n    <MainSummaryContainer>\r\n      <SummaryContainer>\r\n        <SummaryScore>\r\n          You got {rightAnswers.length} out of {question.length} correct in{\" \"}\r\n          {timerValue}\r\n          sec\r\n        </SummaryScore>\r\n        <SummaryText>\r\n          {(rightAnswers.length <= 2 && <p>Are you a f@cking millenial?</p>) ||\r\n            (rightAnswers.length <= 5 && <p>You are mediocre!</p>) ||\r\n            (rightAnswers.length <= 8 && <p>You rock!</p>) ||\r\n            (rightAnswers.length >= 9 && <p>You are a legend!</p>)}\r\n        </SummaryText>\r\n        <Answers />\r\n\r\n        <Link to=\"/\">\r\n          <RestartButton onClick={() => onRestart()}>Restart</RestartButton>\r\n        </Link>\r\n      </SummaryContainer>\r\n    </MainSummaryContainer>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CounterWrapper = styled.div`\r\n  display: inline-block;\r\n  text-align: center;\r\n  justify-content: center;\r\n  min-width: 50px;\r\n  height: 20px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  align-items: center;\r\n  border: 1px solid black;\r\n  border-radius: 20px;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  width: 0;\r\n\r\n  @media (min-width: 768px) {\r\n    max-width: 450px;\r\n  }\r\n\r\n  @media (min-width: 992px) {\r\n    max-width: 550px;\r\n  }\r\n`;\r\n\r\nconst Counter = () => {\r\n  const counter = useSelector((store) => store.quiz.currentQuestionIndex);\r\n  const question = useSelector((state) => state.quiz.questions.length);\r\n\r\n  return (\r\n    <CounterWrapper style={{ width: `${(question - counter) * 10}%` }}>\r\n      {counter + 1}/ {question}\r\n    </CounterWrapper>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { quiz } from \"../reducers/quiz\";\r\n\r\nconst QuestionButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 10px;\r\n  width: 100%;\r\n  height: 110px;\r\n  gap: 5px;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 768px) {\r\n    height: 100px;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst QuestionButton = styled.button`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border-radius: 20px;\r\n  width: 130px;\r\n  padding: 5px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  height: 45px;\r\n  background-color: transparent;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  &:active {\r\n    top: 0.5em;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    height: 55px;\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nconst AnswerButtons = () => {\r\n  const question = useSelector(\r\n    (state) => state.quiz.questions[state.quiz.currentQuestionIndex]\r\n  );\r\n\r\n  const answers = useSelector((state) =>\r\n    state.quiz.answers.find((a) => a.questionId === question.id)\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmitAnswer = (id, index) => {\r\n    dispatch(\r\n      quiz.actions.submitAnswer({\r\n        questionId: id,\r\n        answerIndex: index,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <QuestionButtonWrapper>\r\n        {question.options.map((item, index) => (\r\n          <div key={item}>\r\n            <QuestionButton\r\n              onClick={() => onSubmitAnswer(question.id, index)}\r\n              disabled={answers}\r\n              style={{\r\n                borderColor: !answers\r\n                  ? \"white\"\r\n                  : question.correctAnswerIndex === index\r\n                  ? \"lightgreen\"\r\n                  : \"#800000\",\r\n\r\n                color: !answers\r\n                  ? \"white\"\r\n                  : question.correctAnswerIndex === index\r\n                  ? \"lightgreen\"\r\n                  : \"#800000\",\r\n              }}\r\n            >\r\n              {item}\r\n            </QuestionButton>\r\n          </div>\r\n        ))}\r\n      </QuestionButtonWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswerButtons;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 700px;\r\n  height: 180px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  // background-color: rgba(0, 0, 0, 0.5);\r\n  // border-radius: 20px;\r\n  // margin-bottom: 5px;\r\n`;\r\n\r\nconst QuestionText = styled.h1`\r\n  font-size: 16px;\r\n  text-align: center;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  width: 300px;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 600px;\r\n  }\r\n`;\r\n\r\nconst ImageStyled = styled.img`\r\n  width: 100%;\r\n  max-height: 130px;\r\n  border-radius: 10px;\r\n\r\n  @media (min-width: 768px) {\r\n    max-height: 300px;\r\n  }\r\n`;\r\n\r\nconst TextQuestion = styled.h2`\r\n  color: white;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  align-self: center;\r\n  margin-top: 0;\r\n  font-family: \"Righteous\", cursive;\r\n  @media (min-width: 768px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nconst Questions = () => {\r\n  const question = useSelector(\r\n    (state) => state.quiz.questions[state.quiz.currentQuestionIndex]\r\n  );\r\n\r\n  if (!question) {\r\n    return <h1>Oh no! I could not find the current question!</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <QuestionWrapper>\r\n        <TextWrapper>\r\n          <QuestionText>{question.questionText}</QuestionText>\r\n          <TextQuestion> {question.questionText1}</TextQuestion>\r\n        </TextWrapper>\r\n      </QuestionWrapper>\r\n      <ImageContainer>\r\n        <ImageStyled src={question.img} alt=\"cover\" />\r\n      </ImageContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { quiz } from \"../reducers/quiz\";\r\n\r\nconst NextButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 20px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n  border: 2px solid white;\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst NextQuestion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const question = useSelector(\r\n    (state) => state.quiz.questions[state.quiz.currentQuestionIndex]\r\n  );\r\n\r\n  const answers = useSelector((state) =>\r\n    state.quiz.answers.find((a) => a.questionId === question.id)\r\n  );\r\n\r\n  const nextQuestion = (id) => {\r\n    dispatch(\r\n      quiz.actions.goToNextQuestion({\r\n        questionId: id,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <NextButton disabled={!answers} onClick={() => nextQuestion()}>\r\n      Next Question\r\n    </NextButton>\r\n  );\r\n};\r\n\r\nexport default NextQuestion;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { timerSlice } from \"../reducers/timer\";\r\nimport React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TimerStyle = styled.p`\r\n  display: inline-block;\r\n  margin: 0;\r\n\r\n  @media (min-width: 768px) {\r\n    margin: 20px;\r\n  }\r\nnpm start`;\r\n\r\nexport const Timer = () => {\r\n  const timerValue = useSelector((store) => store.timer.value);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      dispatch(timerSlice.actions.countUp());\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <TimerStyle>\r\n      <span role=\"img\" aria-label=\"timer\">\r\n        ⏳\r\n      </span>\r\n      {timerValue} seconds\r\n    </TimerStyle>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Summary from \"./Summary\";\r\nimport Counter from \"./Counter\";\r\nimport AnswerButtons from \"./AnswerButtons\";\r\nimport Questions from \"./Questions\";\r\nimport NextQuestion from \"./NextQuestion\";\r\nimport { Timer } from \"./Timer\";\r\n\r\nconst QuestionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 50px;\r\n  }\r\n`;\r\n\r\nconst QuestionWrapper = styled.div`\r\n  // background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CurrentQuestion = () => {\r\n  const quizOver = useSelector((state) => state.quiz.quizOver);\r\n\r\n  return (\r\n    <div>\r\n      {quizOver ? (\r\n        <Summary />\r\n      ) : (\r\n        <QuestionContainer>\r\n          <QuestionWrapper>\r\n            <Questions />\r\n            <Timer />\r\n            <Counter />\r\n            <AnswerButtons />\r\n            <NextQuestion />\r\n          </QuestionWrapper>\r\n        </QuestionContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport the_turtles from \"../reducers/assets/the_turtles.jpg\";\r\n\r\nconst StartContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 300px;\r\n  height: 300px;\r\n  margin: 100px auto;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 400px;\r\n    height: 400px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  @media (min-width: 992px) {\r\n    width: 550px;\r\n    height: 550px;\r\n    font-size: 30px;\r\n  }\r\n`;\r\nconst StyleImage = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  font-family: \"Righteous\", cursive;\r\n`;\r\nconst LinkStyled = styled(Link)`\r\n  margin-top: 20px;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  color: white;\r\n  border: 1px solid white;\r\n  border-radius: 20px;\r\n  padding: 10px;\r\n  width: 100px;\r\n\r\n  &:hover {\r\n    background-color: white;\r\n    color: rgb(67, 160, 146);\r\n    border-color: rgb(67, 160, 146);\r\n  }\r\n  @media (min-width: 768px) {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nexport const StartPage = () => {\r\n  return (\r\n    <StartContainer>\r\n      <Header>Turtles Music Quiz</Header>\r\n      <StyleImage src={the_turtles} />\r\n      <LinkStyled to=\"/quiz\">PLAY</LinkStyled>\r\n    </StartContainer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { quiz } from \"./reducers/quiz\";\r\nimport { CurrentQuestion } from \"./components/CurrentQuestion\";\r\nimport { StartPage } from \"./components/StartPage\";\r\nimport { timerSlice } from \"./reducers/timer\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nconst reducer = combineReducers({\r\n  quiz: quiz.reducer,\r\n  timer: timerSlice.reducer,\r\n});\r\n\r\nconst store = configureStore({ reducer });\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<StartPage />} />\r\n          <Route path=\"/quiz\" element={<CurrentQuestion />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport { App } from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}